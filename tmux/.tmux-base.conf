# Set the default shell to ZSH

#  plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g status-position bottom

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, weather, time
set -g @plugin 'pgherveou/dracula-tmux'
set -g @dracula-show-left-icon session
set -g @dracula-plugins  ' '
set -g default-terminal 'screen-256color'
set -ag terminal-overrides ",alacritty:RGB"

# Undercurl https://github.com/folke/tokyonight.nvim#making-undercurls-work-properly-in-tmux
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# enable mouse manipulations
set -g mouse on

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set -g pane-base-index 1
setw -g base-index 1
setw -g pane-base-index 1

# Make sure tmux reports focus changes for vitality.vim
set -g focus-events on

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# increase scrollback lines
set -g history-limit 99999

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

# enable activity alerts
setw -g monitor-activity off
set -g visual-activity off
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# See: https://github.com/mrjones2014/smart-splits.nvim#multiplexer-integrations
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# bind-key -n C-J if-shell "$is_vim" 'send-keys C-S-j' 'resize-pane -D 3'
# bind-key -n C-K if-shell "$is_vim" 'send-keys C-S-k' 'resize-pane -U 3'
# bind-key -n C-H if-shell "$is_vim" 'send-keys C-S-h' 'resize-pane -L 3'
# bind-key -n C-L if-shell "$is_vim" 'send-keys C-S-l' 'resize-pane -R 3'
bind-key -n  if-shell "$is_vim" 'send-keys M-H' 'resize-pane -L 3'
bind-key -n  if-shell "$is_vim" 'send-keys M-J' 'resize-pane -D 3'
bind-key -n  if-shell "$is_vim" 'send-keys M-K' 'resize-pane -U 3'
bind-key -n  if-shell "$is_vim" 'send-keys M-L' 'resize-pane -R 3'

# if is_vim forward C-f  to vim else search history
bind-key -n C-f if-shell "$is_vim" 'send-keys C-f' 'copy-mode ; send-key ?'

# if in zsh forward C-u to vim else else if in copy mode send C-u else get into copy mode and send C-u
# bind-key -T copy-mode-vi C-u send-keys -X halfpage-up
bind-key -n C-u if-shell 'test "#{pane_current_command}" != "zsh"' 'send-keys C-u' 'if-shell -Ft= "#{pane_in_mode}" "send-keys C-u" "copy-mode ; send-key C-u"'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Split window shortcut
bind \\ split-window -h -c "#{pane_current_path}"
bind "'" split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# send clear and clear history and prepend with space so it does not get saved in history
bind-key C-l send-keys " clear && tmux clear-history" \; send-keys "Enter" 

# <prefix> C-k to clear the screen.
bind k kill-window -a

bind-key f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer.sh"

# Break pane into a new window
bind-key b break-pane -d

# Switch windows with shift arrows
bind End select-window -n
bind Home select-window -p

# force Vi mode
set -g status-keys vi
set -g mode-keys vi

# reload configuration
bind R source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# fix issues with Shift+PgUp/PgDn scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@:RGB'


# save buffer into a tempoary file and open it with vim
bind-key -r h capture-pane -S -32768 \; save-buffer /tmp/tmux-buffer \; split-window -h -c /tmp "nvim /tmp/tmux-buffer"

# Setup 'v' to begin selection as in Vim
# http://robots.thoughtbot.com/post/55885045171/tmux-copy-paste-on-os-x-a-better-future
bind-key -T copy-mode-vi v send -X begin-selection

# Split window shortcuts
bind-key t split-window -h -c ~/ "nvim todo.md"

# Notes: open or go to the "notes" window
bind-key N if-shell 'tmux list-windows | grep -q notes' 'select-window -t notes' 'new-window -n notes -c ~/github/notes "nvim +Neotree"'

# Open the rust playground project 
bind-key P split-window -Z -h -c ~/ "cd ~/github/rust-playground && source ~/.zshrc && nvim 'src/main.rs'"

# rust repl
unbind-key r
bind-key r split-window -h -c ~/ "evcxr"

bind-key V if-shell "tmux list-windows | grep -q vim-dotfiles" "select-window -t vim-dotfiles" "new-window -n vim-dotfiles -c ~/.config/nvim 'zsh -ic \"nvim +Telescope live_grep\"'"

bind-key s choose-session

# do not ask for confirmation for kill window and pane shortcut
bind-key & kill-window
bind-key x kill-pane
bind-key o kill-pane -a
bind-key O kill-window -a # same as k

# Easily swap a pane (targeted by pane number) with the current pane
# bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Prompted join-pane
bind-key J command-prompt -p "join pane from: "  "join-pane  -s '%%'"

# tmux fzf plugin
TMUX_FZF_LAUNCH_KEY="f"

# initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

set -gu default-command
set -g default-shell "$SHELL"
